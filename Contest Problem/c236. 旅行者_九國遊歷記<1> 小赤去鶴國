#include<iostream>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<cstdio>
#include<queue>
#include<string>
#include<map>
#include<set>
#include<string>
#include<sstream>
#include<vector>
#include<cassert>
#include<functional>
#include<unordered_map>
using namespace std;

map<string, int>m;
map<string, int>::iterator it;
using namespace std;

struct word {
	int y;
	string s, t;
}w[1001];
bool cmp(word a, word b) {
	if (a.y == b.y)return a.t< b.t;
	return a.y < b.y;
}
string g(string s) {
	for (int i = 0; i < s.size(); i++)
		s[i] = tolower(s[i]);
	return s;
}
int main() {
	int T;
	cin >> T;
	int n, y;
	int c = 0;
	string s, t;
	while (T--) {
		cin >> n;
		for (int i = 0; i < n; i++) {
			cin >> s >> y;
			t = g(s);
			if (m.find(t) == m.end()) {
				m[t] = c;
				w[c++] = word{ y, s, t };
			}
			else if (w[m[t]].y > y) {
				w[m[t]].y = y;
				w[m[t]].s = s;
			}
		}
	}
	sort(w, w + c, cmp);
	for (int i = 0; i < c; i++)
		cout << w[i].s << endl;
}
