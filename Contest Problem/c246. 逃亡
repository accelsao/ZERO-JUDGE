#include<iostream>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<cstdio>
#include<cstdlib>
#include<queue>
#include<string>
#include<vector>
using namespace std;


struct edge{
	int to, t;
};

int main(){
	int T;
	cin >> T;
	int n, e, t, m;
	while (T--){
		cin >> n >> e >> t >> m;
		vector<edge>g[101];
		for (int i = 0; i < m; i++){
			int a, b, c;
			cin >> a >> b >> c;
			g[b].push_back(edge{ a, c });
			//從後找
		}
		int d[101], inq[101] = {};
		for (int i = 0; i <= n; i++)d[i] = 1e9;
		d[e] = 0;
		queue<int>q;
		q.push(e);
		while (!q.empty()){
			int x = q.front(); q.pop();
			for (int i = 0; i < g[x].size(); i++)
				if (d[g[x][i].to] > d[x] + g[x][i].t){
					d[g[x][i].to] = d[x] + g[x][i].t;
					if (!inq[g[x][i].to]){
						inq[g[x][i].to] = 0;
						q.push(g[x][i].to);
					}
				}
		}
		int ans = 0;
		for (int i = 1; i <= n; i++)
			if (d[i] <= t)ans++;
		printf("%d\n", ans);
		if (T)puts("");
	}
}
