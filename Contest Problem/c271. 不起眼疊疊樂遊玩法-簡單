#include<iostream>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<cstdio>
#include<cstdlib>
#include<queue>
#include<string>
#include<vector>
using namespace std;

struct box {
	int w, s;
	int h;
}p[10000];

bool cmp(box a, box b) {
	if (a.h == b.h)
		return a.s - a.w > b.s - b.w;
	return a.h > b.h;
}
int dp[10005][2] = {};
int main() {
	int t;
	cin >> t;
	while (t--) {

		int n = 1;
		while (cin >> p[n].w >> p[n].s >> p[n].h, p[n].w)
			n++;
		sort(p + 1, p + n, cmp);
		for (int i = 1; i < n; ++i)
			for (int j = 0; j < 2; j++)
				dp[i][j] = 0;
		dp[0][0] = dp[0][1] = 1e9;
		//dp 負重
		int Max = 0;
		for (int i = 1; i < n; ++i) {
			while (dp[Max][0] >= p[i].w)Max++;
			for (int j = Max; j >= 1; j--) {
				if (p[i].h <= dp[j - 1][1])
					if (dp[j - 1][0] >= p[i].w) {
						int k = min(dp[j - 1][0] - p[i].w, p[i].s - p[i].w);
						if (dp[j][0] < k) {
							dp[j][0] = k;
							dp[j][1] = p[i].h;
						}
					}
			}
		}
		printf("%d\n", Max);
	}
}
